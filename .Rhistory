"Hours_Per_Week")])
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
normalize(c(1, 2, 3, 4, 5))
normalize(c(10, 20, 30, 40, 50))
adult_income_n <- as.data.frame(lapply(adult_income[11:13], normalize))
summary(adult_income_n$Capital_Gain)
adult_income_train <- adult_income_n[1:3000, ]
adult_income_test <- adult_income_n[3001:3900, ]
adult_income_train_labels <- adult_income[1:3000, 1]
adult_income_test_labels <- adult_income[3001:3900, 1]
library(class)
adult_income_test_pred <- knn(train = adult_income_train, test =
adult_income_test, cl = adult_income_train_labels, k=5)
library(C50)
library(gmodels)
adult_income <- read.csv("data/classification/Adult_Income.csv", stringsAsFactors = FALSE)
head(adult_income)
set.seed(1)
adult_income_rand <- adult_income[order(runif(10000)), ]
adult_income_train <- adult_income_rand[1:8000, ]
adult_income_test <- adult_income_rand[8001:10000, ]
adult_income_model <- C5.0(as.factor(Wage) ~ ., data = adult_income_train)
summary(adult_income_model)
plot(adult_income_model)
adult_income_train$Wage <- factor(adult_income_train$Wage)
adult_income_test$Wage <- factor(adult_income_test$Wage)
library(C50)
library(gmodels)
adult_income <- read.csv("data/classification/Adult_Income.csv", stringsAsFactors = FALSE)
head(adult_income)
set.seed(1)
adult_income_rand <- adult_income[order(runif(32562)), ]
adult_income_train <- adult_income_rand[1:8000, ]
adult_income_test <- adult_income_rand[8001:10000, ]
library(C50)
library(gmodels)
adult_income <- read.csv("data/classification/Adult_Income.csv", stringsAsFactors = FALSE)
head(adult_income)
set.seed(1)
adult_income_rand <- adult_income[order(runif(32562)), ]
adult_income_train <- adult_income_rand[1:30000, ]
adult_income_test <- adult_income_rand[30001:32562, ]
adult_income_model <- C5.0(as.factor(Wage) ~ ., data = adult_income_train)
summary(adult_income_model)
plot(adult_income_model)
adult_income <- read.csv("data/classification/Adult_Income.csv", stringsAsFactors = FALSE)
library(C50)
library(gmodels)
adult_income <- read.csv("data/classification/Adult_Income.csv", stringsAsFactors = FALSE)
head(adult_income)
set.seed(1)
adult_income_rand <- adult_income[order(runif(32562)), ]
adult_income_train <- adult_income_rand[1:8000, ]
adult_income_test <- adult_income_rand[8001:10000, ]
adult_income_model <- C5.0(as.factor(Wage) ~ ., data = adult_income_train)
summary(adult_income_model)
plot(adult_income_model)
engy_eff <- read.csv("data/regression/EnergyEfficiency.csv", stringsAsFactors = FALSE)
values <- data.frame(engy_eff)
cor(engy_eff)
pairs(engy_eff)
options(warn=-1)
plot(engy_eff$HeatingLoad, engy_eff$CoolingLoad, xlab="Heating Load", ylab="Cooling Load")
plot(engy_eff$RelativeCompactness, engy_eff$SurfaceArea, xlab="Relative Compactness", ylab="Surface Area")
summary(HeatingLoad)
summary(CoolingLoad)
table(HeatingLoad)
table(CoolingLoad)
set.seed(1)
mydata <- data.frame(engy_eff)
regression.model <- lm(HeatingLoad ~ SurfaceArea + RoofArea + WallArea)
plot(HeatingLoad, CoolingLoad, xlab="HeatingLoad", ylab="CoolingLoad")
abline(lm(HeatingLoad ~ CoolingLoad, data = mydata))
plot(regression.model, which = 1)
adult_income_train$Wage <- factor(adult_income_train$Wage)
adult_income_test$Wage <- factor(adult_income_test$Wage)
adult_income_predictions <- predict(adult_income_model, adult_income_test)
adult_income_predictions
?CrossTable
CrossTable(adult_income_predictions, adult_income_test$Wage,
prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE,
dnn= c('predicted', 'actual'))
library(C50)
library(gmodels)
adult_income <- read.csv("data/classification/Adult_Income.csv", stringsAsFactors = FALSE)
head(adult_income)
set.seed(1)
adult_income_rand <- adult_income[order(runif(32562)), ]
adult_income_train <- adult_income_rand[1:8000, ]
adult_income_test <- adult_income_rand[8001:10000, ]
adult_income_model <- C5.0(as.factor(Wage) ~ ., data = adult_income_train)
summary(adult_income_model)
plot(adult_income_model)
adult_income_train$Wage <- factor(adult_income_train$Wage)
adult_income_test$Wage <- factor(adult_income_test$Wage)
adult_income_predictions <- predict(adult_income_model, adult_income_test)
adult_income_predictions
?CrossTable
CrossTable(adult_income_predictions, adult_income_test$Wage,
prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE,
dnn= c('predicted', 'actual'))
plot(adult_income$Wage)
table(adult_income$Wage)
View(adult_income)
table(adult_income$Age)
library(C50)
library(gmodels)
adult_income <- read.csv("data/classification/Adult_Income.csv", stringsAsFactors = FALSE)
head(adult_income)
table(adult_income$Wage)
engy_eff <- read.csv("data/regression/EnergyEfficiency.csv", stringsAsFactors = FALSE)
values <- data.frame(engy_eff)
cor(engy_eff)
var(engy_eff)
cov(engy_eff)
pairs(engy_eff)
options(warn=-1)
plot(engy_eff$HeatingLoad, engy_eff$CoolingLoad, xlab="Heating Load", ylab="Cooling Load")
plot(engy_eff$RelativeCompactness, engy_eff$SurfaceArea, xlab="Relative Compactness", ylab="Surface Area")
summary(HeatingLoad)
summary(CoolingLoad)
table(HeatingLoad)
table(CoolingLoad)
summary(engy_eff$HeatingLoad)
summary(engy_eff$CoolingLoad)
mydata <- data.frame(engy_eff)
plot(HeatingLoad, CoolingLoad, xlab="HeatingLoad", ylab="CoolingLoad")
engy_eff <- read.csv("data/regression/EnergyEfficiency.csv", stringsAsFactors = FALSE)
values <- data.frame(engy_eff)
cor(engy_eff)
var(engy_eff)
cov(engy_eff)
options(warn=-1)
plot(engy_eff$HeatingLoad, engy_eff$CoolingLoad, xlab="Heating Load", ylab="Cooling Load")
plot(engy_eff$RelativeCompactness, engy_eff$SurfaceArea, xlab="Relative Compactness", ylab="Surface Area")
attach(values)
summary(engy_eff$HeatingLoad)
summary(engy_eff$CoolingLoad)
table(engy_eff$HeatingLoad)
table(engy_eff$CoolingLoad)
set.seed(1)
mydata <- data.frame(engy_eff)
regression.model <- lm(HeatingLoad ~ SurfaceArea + RoofArea + WallArea)
plot(HeatingLoad, CoolingLoad, xlab="HeatingLoad", ylab="CoolingLoad")
abline(lm(HeatingLoad ~ CoolingLoad, data = mydata))
plot(regression.model, which = 1)
newdata <- data.frame(SurfaceArea=500.0, RoofArea=150.0, WallArea=300.0)
predict(regression.model, newdata)
summary(regression.model)$r.squared
predict(regression.model, newdata, interval="confidence")
predict(regression.model, newdata, interval="predict")
plot(regression.model, which = 1)
mydata1 <- data.frame(engy_eff)
regression.model1 <- lm(CoolingLoad ~ SurfaceArea + RoofArea + WallArea)
plot(CoolingLoad, HeatingLoad, xlab="x CoolingLoad", ylab="HeatingLoad")
abline(lm(CoolingLoad ~ HeatingLoad, data = mydata1))
methods(plot)
plot(regression.model1, which = 1)
newdata1 <- data.frame(SurfaceArea=500.0, RoofArea=150.0, WallArea=300.0)
predict(regression.model1, newdata1)
summary(regression.model1)$r.squared
predict(regression.model1, newdata1, interval="confidence")
predict(regression.model1, newdata1, interval="predict")
View(engy_eff)
library(C50)
library(gmodels)
adult_income <- read.csv("data/classification/Adult_Income.csv", stringsAsFactors = FALSE)
head(adult_income)
table(adult_income$Wage)
table(adult_income$Age)
set.seed(1)
adult_income_rand <- adult_income[order(runif(32562)), ]
adult_income_train <- adult_income_rand[1:8000, ]
adult_income_test <- adult_income_rand[8001:10000, ]
adult_income_model <- C5.0(as.factor(Wage) ~ ., data = adult_income_train)
summary(adult_income_model)
plot(adult_income_model)
adult_income_train$Wage <- factor(adult_income_train$Wage)
adult_income_test$Wage <- factor(adult_income_test$Wage)
adult_income <- read.csv("data/Classification/Adult_Income.csv", stringsAsFactors = FALSE)
str(adult_income)
adult_income[is.na(adult_income)] <- 0
table(adult_income$Wage)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
normalize(c(1, 2, 3, 4, 5))
normalize(c(10, 20, 30, 40, 50))
adult_income_n <- as.data.frame(lapply(adult_income[11:13], normalize))
summary(adult_income_n$Capital_Gain)
summary(adult_income_n$Hours_Per_Week)
adult_income_test_pred <- knn(train = adult_income_train, test =
adult_income_test, cl = adult_income_train_labels, k=5)
library(gmodels)
library(class)
adult_income_test_pred <- knn(train = adult_income_train, test =
adult_income_test, cl = adult_income_train_labels, k=5)
adult_income <- read.csv("data/Classification/Adult_Income.csv", stringsAsFactors = FALSE)
str(adult_income)
#reset NA to 0
adult_income[is.na(adult_income)] <- 0
# table of Wage
table(adult_income$Wage)
# table or proportions with more informative labels
round(prop.table(table(adult_income$Wage)) * 100, digits = 1)
# summarize three numeric features
summary(adult_income[c("Capital_Gain", "Capital_Loss",
"Hours_Per_Week")])
# create normalization function
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# normalize the adult_income data
adult_income_n <- as.data.frame(lapply(adult_income[11:13], normalize))
# confirm that normalization worked
summary(adult_income_n$Hours_Per_Week)
# create training and test data
adult_income_train <- adult_income_n[1:3000, ]
adult_income_test <- adult_income_n[3001:3900, ]
# create labels for training and test data
adult_income_train_labels <- adult_income[1:3000, 1]
adult_income_test_labels <- adult_income[3001:3900, 1]
adult_income_test_pred <- knn(train = adult_income_train, test =
adult_income_test, cl = adult_income_train_labels, k=5)
View(adult_income)
adult_income$Workclass <- factor(adult_income$Workclass,
levels = c("?"),
labels = c("Unknown"))
View(adult_income)
adult_income <- read.csv("data/Classification/Adult_Income.csv", stringsAsFactors = FALSE)
str(adult_income)
adult_income[is.na(adult_income)] <- 0
adult_income$Workclass <- factor(adult_income$Workclass,
levels = c("?"),
labels = c("Unknown"))
View(adult_income)
adult_income <- read.csv("data/Classification/Adult_Income.csv", stringsAsFactors = FALSE)
adult_income <- read.csv("data/Classification/Adult_Income.csv", stringsAsFactors = FALSE)
View(adult_income)
adult_income[is.na(adult_income)] <- 0
adult_income$Workclass <- factor(adult_income$Workclass,
levels = c("?"),
labels = c("NotProvided"))
View(adult_income)
View(adult_income)
adult_income <- read.csv("data/Classification/Adult_Income.csv", stringsAsFactors = FALSE)
str(adult_income)
View(adult_income)
table(adult_income$Wage)
round(prop.table(table(adult_income$Wage)) * 100, digits = 1)
summary(adult_income[c("Capital_Gain", "Capital_Loss",
"Hours_Per_Week")])
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
adult_income_n <- as.data.frame(lapply(adult_income[11:13], normalize))
summary(adult_income_n$Hours_Per_Week)
adult_income_train <- adult_income_n[1:3000, ]
adult_income_test <- adult_income_n[3001:3900, ]
adult_income_train_labels <- adult_income[1:3000, 1]
adult_income_test_labels <- adult_income[3001:3900, 1]
View(adult_income)
adult_income[- grep("?", adult_income$Workclass),]
View(adult_income)
adult_income[adult_income$Workclass=="?"]<-"Not-Provided"
View(adult_income)
complete.cases(adult_income)
adult_income <- complete.cases(adult_income)
data <- read.csv("data/Classification/Adult_Income.csv", stringsAsFactors = FALSE)
adult_income <- data[complete.cases(data), ]
str(adult_income)
View(data)
adult_income <- read.csv("data/Classification/Adult_Income.csv", stringsAsFactors = FALSE)
str(adult_income)
adult_income <- adult_income[is.na(adult_income)] <- 0
adult_income <- na.omit(adult_income, cols="Workclass")
table(adult_income$Wage)
adult_income <- read.csv("data/Classification/Adult_Income.csv", stringsAsFactors = FALSE)
str(adult_income)
adult_income[is.na(adult_income)] <- 0
na.omit(adult_income, cols="Workclass")
adult_income <- read.csv("data/Classification/Adult_Income.csv", stringsAsFactors = FALSE)
str(adult_income)
adult_income[is.na(adult_income)] <- 0
adult_income$Workclass <- factor(adult_income$Workclass,
levels = c(""),
labels = c("NotProvided"))
View(adult_income)
View(adult_income)
adult_income <- read.csv("data/Classification/Adult_Income.csv", stringsAsFactors = FALSE)
adult_income <- read.csv("data/Classification/Adult_Income.csv", stringsAsFactors = FALSE)
str(adult_income)
str(adult_income$W)
str(adult_income$Workclass)
str(adult_income$Serv)
adult_income$Workclass <- NULL
adult_income$Serv <- NULL
View(adult_income)
adult_income$Native_Country <- NULL
View(adult_income)
table(adult_income$Wage)
round(prop.table(table(adult_income$Wage)) * 100, digits = 1)
summary(adult_income[c("Capital_Gain", "Capital_Loss",
"Hours_Per_Week")])
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
adult_income_n <- as.data.frame(lapply(adult_income[11:13], normalize))
adult_income_n <- as.data.frame(lapply(adult_income[9:11], normalize))
summary(adult_income_n$Hours_Per_Week)
adult_income_train <- adult_income_n[1:3000, ]
adult_income_test <- adult_income_n[3001:3900, ]
adult_income_train_labels <- adult_income[1:3000, 1]
adult_income_test_labels <- adult_income[3001:3900, 1]
library(class)
adult_income_test_pred <- knn(train = adult_income_train, test =
adult_income_test, cl = adult_income_train_labels, k=5)
View(adult_income_test)
adult_income <- read.csv("data/Classification/Adult_Income.csv", stringsAsFactors = FALSE)
str(adult_income)
adult_income[is.na(adult_income)] <- 0
table(adult_income$Wage)
round(prop.table(table(adult_income$Wage)) * 100, digits = 1)
summary(adult_income[c("Capital_Gain", "Capital_Loss",
"Hours_Per_Week")])
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
adult_income_n <- as.data.frame(lapply(adult_income[11:13], normalize))
summary(adult_income_n$Hours_Per_Week)
adult_income_train <- adult_income_n[1:3000, ]
adult_income_test <- adult_income_n[3001:3900, ]
adult_income_train_labels <- adult_income[1:3000, 1]
adult_income_test_labels <- adult_income[3001:3900, 1]
library(class)
adult_income_test_pred <- knn(train = adult_income_train, test =
adult_income_test, cl = adult_income_train_labels, k=5)
library(gmodels)
CrossTable(x = adult_income_test_labels, y = adult_income_test_pred,
prop.chisq=FALSE)
energy_efficiency <- read.csv("data/Regression/EnergyEfficiency.csv", stringsAsFactors = FALSE)
str(energy_efficiency)
table(energy_efficiency$HeatingLoad)
table(energy_efficiency$CoolingLoad)
round(prop.table(table(energy_efficiency$HeatingLoad)) * 100, digits = 1)
summary(energy_efficiency[c("SurfaceArea", "RoofArea",
"WallArea")])
summary(adult_income[c("Capital_Gain", "Capital_Loss",
"Hours_Per_Week")])
View(energy_efficiency)
energy_efficiency <- read.csv("data/Regression/EnergyEfficiency.csv", stringsAsFactors = FALSE)
str(energy_efficiency)
table(energy_efficiency$HeatingLoad)
table(energy_efficiency$CoolingLoad)
round(prop.table(table(energy_efficiency$HeatingLoad)) * 100, digits = 1)
summary(energy_efficiency[c("SurfaceArea", "RoofArea",
"WallArea")])
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
energy_efficiency_n <- as.data.frame(lapply(energy_efficiency[1:8], normalize))
summary(energy_efficiency_n$SurfaceArea)
summary(energy_efficiency[c("SurfaceArea", "RoofArea",
"WallArea")])
energy_efficiency_train <- energy_efficiency_n[1:500, ]
energy_efficiency_test <- energy_efficiency_n[501:768, ]
energy_efficiency_train_labels <- adult_income[1:500, 1]
energy_efficiency_train_labels <- energy_efficiency[1:500, 1]
energy_efficiency_test_labels <- energy_efficiency[501:768, 1]
library(class)
energy_efficiency_test_pred <- knn(train = energy_efficiency_train, test =
energy_efficiency_test, cl = energy_efficiency_train_labels, k=5)
library(gmodels)
CrossTable(x = energy_efficiency_test_labels, y = energy_efficiency_test_pred,
prop.chisq=FALSE)
energy_efficiency <- read.csv("data/Regression/EnergyEfficiency.csv", stringsAsFactors = FALSE)
str(energy_efficiency)
table(energy_efficiency$HeatingLoad)
table(energy_efficiency$CoolingLoad)
round(prop.table(table(energy_efficiency$HeatingLoad)) * 100, digits = 1)
summary(energy_efficiency[c("SurfaceArea", "RoofArea",
"WallArea")])
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
energy_efficiency_n <- as.data.frame(lapply(energy_efficiency[1:5], normalize))
summary(energy_efficiency_n$SurfaceArea)
energy_efficiency_train <- energy_efficiency_n[1:500, ]
energy_efficiency_test <- energy_efficiency_n[501:768, ]
energy_efficiency_train_labels <- energy_efficiency[1:500, 1]
energy_efficiency_test_labels <- energy_efficiency[501:768, 1]
library(class)
energy_efficiency_test_pred <- knn(train = energy_efficiency_train, test =
energy_efficiency_test, cl = energy_efficiency_train_labels, k=1)
library(gmodels)
CrossTable(x = energy_efficiency_test_labels, y = energy_efficiency_test_pred,
prop.chisq=FALSE)
View(energy_efficiency)
energy_efficiency_n <- as.data.frame(lapply(energy_efficiency[1:10], normalize))
summary(energy_efficiency_n$SurfaceArea)
energy_efficiency_train <- energy_efficiency_n[1:500, ]
energy_efficiency_test <- energy_efficiency_n[501:768, ]
energy_efficiency_train_labels <- energy_efficiency[1:500, 1]
energy_efficiency_test_labels <- energy_efficiency[501:768, 1]
library(class)
energy_efficiency_test_pred <- knn(train = energy_efficiency_train, test =
energy_efficiency_test, cl = energy_efficiency_train_labels, k=1)
library(gmodels)
CrossTable(x = energy_efficiency_test_labels, y = energy_efficiency_test_pred,
prop.chisq=FALSE)
energy_efficiency_test_pred <- knn(train = energy_efficiency_train, test =
energy_efficiency_test, cl = energy_efficiency_train_labels, k=3)
library(gmodels)
CrossTable(x = energy_efficiency_test_labels, y = energy_efficiency_test_pred,
prop.chisq=FALSE)
energy_efficiency_test_pred <- knn(train = energy_efficiency_train, test =
energy_efficiency_test, cl = energy_efficiency_train_labels, k=13)
library(gmodels)
CrossTable(x = energy_efficiency_test_labels, y = energy_efficiency_test_pred,
prop.chisq=FALSE)
CrossTable(x = energy_efficiency_test_labels, y = energy_efficiency_test_pred,
prop.chisq=FALSE, dnn = c('predicted', 'actual'))
error_cost <- matrix(c(0, 1, 4, 0), nrow = 2)
error_cost
energy_efficiency_cost <- C5.0(default ~ ., data = energy_efficiency_train,
costs = error_cost)
library(C5.0)
library(C50)
energy_efficiency_cost <- C5.0(default ~ ., data = energy_efficiency_train,
costs = error_cost)
energy_efficiency_cost <- C5.0(HeatingLoad ~ ., data = energy_efficiency_train,
costs = error_cost)
energy_efficiency_cost <- C5.0(as.factor(HeatingLoad ~ ., data = energy_efficiency_train,
costs = error_cost))
energy_efficiency_cost <- as.factor(C5.0(HeatingLoad ~ ., data = energy_efficiency_train,
costs = error_cost))
energy_efficiency_cost <- C5.0(as.factor(HeatingLoad) ~ ., data = energy_efficiency_train,
costs = error_cost)
energy_efficiency_predictions <- predict(energy_efficiency_cost, energy_efficiency_test)
energy_efficiency_cost <- C5.0(as.factor(HeatingLoad) ~ ., data = energy_efficiency_train,
costs = error_cost)
error_cost <- matrix(c(0, 1, 4, 0), nrow = 396)
error_cost
library(C50)
energy_efficiency_cost <- C5.0(as.factor(HeatingLoad) ~ ., data = energy_efficiency_train,
costs = error_cost)
error_cost <- matrix(c(0, 1, 4, 0), 396, 396, byrow=TRUE)
error_cost
library(C50)
energy_efficiency_cost <- C5.0(as.factor(HeatingLoad) ~ ., data = energy_efficiency_train,
costs = error_cost)
energy_efficiency_predictions <- predict(energy_efficiency_cost, energy_efficiency_test)
CrossTable(energy_efficiency_predictions, energy_efficiency_test$default,
prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE,
dnn = c('predicted', 'actual'))
View(error_cost)
library(C50)
library(gmodels)
adult_income <- read.csv("data/classification/Adult_Income.csv", stringsAsFactors = FALSE)
head(adult_income)
table(adult_income$Wage)
table(adult_income$Age)
set.seed(1)
adult_income_rand <- adult_income[order(runif(32562)), ]
adult_income_train <- adult_income_rand[1:1000, ]
adult_income_test <- adult_income_rand[1001:1200, ]
adult_income_model <- C5.0(as.factor(Wage) ~ ., data = adult_income_train)
summary(adult_income_model)
plot(adult_income_model)
adult_income_train$Wage <- factor(adult_income_train$Wage)
adult_income_test$Wage <- factor(adult_income_test$Wage)
adult_income_predictions <- predict(adult_income_model, adult_income_test)
library(C50)
library(gmodels)
adult_income <- read.csv("data/classification/Adult_Income.csv", stringsAsFactors = FALSE)
head(adult_income)
table(adult_income$Wage)
table(adult_income$Age)
set.seed(1)
adult_income_rand <- adult_income[order(runif(32562)), ]
adult_income_train <- adult_income_rand[1:8000, ]
adult_income_test <- adult_income_rand[8001:10000, ]
adult_income_model <- C5.0(as.factor(Wage) ~ ., data = adult_income_train)
summary(adult_income_model)
plot(adult_income_model)
adult_income_rand <- adult_income[order(runif(32562)), ]
adult_income_train <- adult_income_rand[1:4000, ]
adult_income_test <- adult_income_rand[4001:4400, ]
adult_income_model <- C5.0(as.factor(Wage) ~ ., data = adult_income_train)
summary(adult_income_model)
plot(adult_income_model)
adult_income_rand <- adult_income[order(runif(32562)), ]
adult_income_train <- adult_income_rand[1:3000, ]
adult_income_test <- adult_income_rand[3001:3400, ]
adult_income_model <- C5.0(as.factor(Wage) ~ ., data = adult_income_train)
summary(adult_income_model)
plot(adult_income_model)
adult_income_rand <- adult_income[order(runif(32562)), ]
adult_income_train <- adult_income_rand[1:1000, ]
adult_income_test <- adult_income_rand[1001:1400, ]
adult_income_model <- C5.0(as.factor(Wage) ~ ., data = adult_income_train)
summary(adult_income_model)
plot(adult_income_model)
adult_income_model <- C5.0(as.factor(Wage) ~ ., data = adult_income_train)
adult_income_rand <- adult_income[order(runif(32562)), ]
adult_income_train <- adult_income_rand[1:4000, ]
adult_income_test <- adult_income_rand[4001:4400, ]
adult_income_model <- C5.0(as.factor(Wage) ~ ., data = adult_income_train)
summary(adult_income_model)
plot(adult_income_model)
